{"version":3,"file":"useIntersectionObserver.js","sources":["../../../../src/components/virtual-list/useIntersectionObserver.ts"],"sourcesContent":["import { useEffect, useRef, useMemo, useCallback } from 'react';\n\ninterface UseIntersectionObserverOptions extends IntersectionObserverInit {\n    root?: Element | Document | null;\n    rootMargin?: string;\n    threshold?: number | number[];\n}\n\nconst useIntersectionObserver = (\n    nodes: (Element | null)[],\n    onVisibilityChange?: ((isVisible: boolean, entry: IntersectionObserverEntry) => void) | null,\n    onEntryUpdate?: ((entry: IntersectionObserverEntry) => void) | null,\n    options: UseIntersectionObserverOptions = {},\n) => {\n    const defaultOptions: UseIntersectionObserverOptions = {\n        root: null,\n        rootMargin: '0px',\n        threshold: 0.1,\n    };\n\n    const observerRef = useRef<IntersectionObserver | null>(null);\n    const intersectingStates = useRef<Map<Element, boolean>>(new Map());\n\n    const memoizedOptions = useMemo(() => ({ ...defaultOptions, ...options }), [options]);\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    const memoizedOnVisibilityChange = useCallback(onVisibilityChange ?? (() => {}), [\n        onVisibilityChange,\n    ]);\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    const memoizedOnEntryUpdate = useCallback(onEntryUpdate ?? (() => {}), [onEntryUpdate]);\n\n    useEffect(() => {\n        if (observerRef.current) {\n            observerRef.current.disconnect();\n        }\n\n        observerRef.current = new IntersectionObserver((entries) => {\n            entries.forEach((entry) => {\n                memoizedOnEntryUpdate(entry);\n\n                const prevIntersecting = intersectingStates.current.get(entry.target);\n                const currIntersecting = entry.isIntersecting;\n                if (prevIntersecting !== currIntersecting) {\n                    intersectingStates.current.set(entry.target, currIntersecting);\n                    memoizedOnVisibilityChange(currIntersecting, entry);\n                }\n            });\n        }, memoizedOptions);\n\n        if (nodes) {\n            nodes.forEach((node) => {\n                if (node) {\n                    observerRef.current?.observe(node);\n                }\n            });\n        }\n\n        return () => {\n            if (observerRef.current) {\n                observerRef.current.disconnect();\n            }\n        };\n    }, [\n        nodes,\n        memoizedOptions,\n        memoizedOnVisibilityChange,\n        memoizedOnEntryUpdate,\n        intersectingStates,\n    ]);\n\n    const observe = useCallback((node: Element | null) => {\n        if (observerRef.current && node) {\n            observerRef.current.observe(node);\n        }\n    }, []);\n\n    const unobserve = useCallback((node: Element | null) => {\n        if (observerRef.current && node) {\n            observerRef.current.unobserve(node);\n        }\n    }, []);\n\n    return { observe, unobserve };\n};\n\nexport default useIntersectionObserver;\n"],"names":["useRef","useMemo","useCallback","useEffect"],"mappings":";;;AAQA,MAAM,0BAA0B,CAC5B,OACA,oBACA,eACA,UAA0C,CAAA,MACzC;AACD,QAAM,iBAAiD;AAAA,IACnD,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,WAAW;AAAA,EACf;AAEM,QAAA,cAAcA,kBAAoC,IAAI;AAC5D,QAAM,qBAAqBA,WAAAA,OAAkC,oBAAA,KAAK;AAE5D,QAAA,kBAAkBC,mBAAQ,OAAO,EAAE,GAAG,gBAAgB,GAAG,QAAQ,IAAI,CAAC,OAAO,CAAC;AAE9E,QAAA,6BAA6BC,uBAAY,uBAAuB,MAAM;AAAA,EAAA,IAAK;AAAA,IAC7E;AAAA,EAAA,CACH;AAEK,QAAA,wBAAwBA,WAAY,YAAkB,MAAM;AAAA,EAAA,GAAK,CAAC,aAAa,CAAC;AAEtFC,aAAAA,UAAU,MAAM;AACZ,QAAI,YAAY,SAAS;AACrB,kBAAY,QAAQ,WAAW;AAAA,IAAA;AAGnC,gBAAY,UAAU,IAAI,qBAAqB,CAAC,YAAY;AAChD,cAAA,QAAQ,CAAC,UAAU;AACvB,8BAAsB,KAAK;AAE3B,cAAM,mBAAmB,mBAAmB,QAAQ,IAAI,MAAM,MAAM;AACpE,cAAM,mBAAmB,MAAM;AAC/B,YAAI,qBAAqB,kBAAkB;AACvC,6BAAmB,QAAQ,IAAI,MAAM,QAAQ,gBAAgB;AAC7D,qCAA2B,kBAAkB,KAAK;AAAA,QAAA;AAAA,MACtD,CACH;AAAA,OACF,eAAe;AAEP;AACD,YAAA,QAAQ,CAAC,SAAS;;AACpB,YAAI,MAAM;AACM,4BAAA,YAAA,mBAAS,QAAQ;AAAA,QAAI;AAAA,MACrC,CACH;AAAA,IAAA;AAGL,WAAO,MAAM;AACT,UAAI,YAAY,SAAS;AACrB,oBAAY,QAAQ,WAAW;AAAA,MAAA;AAAA,IAEvC;AAAA,EAAA,GACD;AAAA,IACC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA,CACH;AAEK,QAAA,UAAUD,uBAAY,CAAC,SAAyB;AAC9C,QAAA,YAAY,WAAW,MAAM;AACjB,kBAAA,QAAQ,QAAQ,IAAI;AAAA,IAAA;AAAA,EAExC,GAAG,EAAE;AAEC,QAAA,YAAYA,uBAAY,CAAC,SAAyB;AAChD,QAAA,YAAY,WAAW,MAAM;AACjB,kBAAA,QAAQ,UAAU,IAAI;AAAA,IAAA;AAAA,EAE1C,GAAG,EAAE;AAEE,SAAA,EAAE,SAAS,UAAU;AAChC;;"}